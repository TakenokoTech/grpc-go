name: Go
on: [push]
jobs:

  Test:
    runs-on: ubuntu-latest
    steps:
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Test
      run: |
        mkdir report
        go test ./...
        go test -coverprofile="report/cover.out" -covermode=atomic ./...  
    - name: codecov
      uses: codecov/codecov-action@v1.0.2
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./report/cover.out
        flags: unittests
        name: codecov-umbrella
        
  Build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-latest, ubuntu-latest]
    steps:
    - name: Set up Go 1.12
      uses: actions/setup-go@v1
      with:
        go-version: 1.12
      id: go
    - name: Check out code into the Go module directory
      uses: actions/checkout@v1
    - name: Get dependencies
      run: |
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi
    - name: Build (macOS)
      if: matrix.os == 'macOS-latest'
      run: |
        GOOS=darwin GOARCH=amd64 go build -o grpc-go_darwin_amd64 ./bin/grpc-go/main.go 
        GOOS=darwin GOARCH=amd64 go build -o grpc-go-client_darwin_amd64 ./bin/grpc-go-client/main.go
    - if: matrix.os == 'macOS-latest'
      name: Release (macOS)
      uses: nokotech/actions/release@release
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        owner: TakenokoTech
        repo: grpc-go
        dir: ./
        file: grpc-go_darwin_amd64
        content-type: application/octet-stream        
    - name: Build (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        GOOS=windows GOARCH=amd64 go build -o grpc-go_windows_amd64 ./bin/grpc-go/main.go 
        GOOS=windows GOARCH=amd64 go build -o grpc-go-client_windows_amd64 ./bin/grpc-go-client/main.go
    - if: matrix.os == 'windows-latest'
      name: Release (Windows)
      uses: nokotech/actions/release@release
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        owner: TakenokoTech
        repo: grpc-go
        dir: ./
        file: grpc-go_windows_amd64
        content-type: application/octet-stream
    - name: Build (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        GOOS=linux GOARCH=amd64 go build -o grpc-go_linux_amd64 ./bin/grpc-go/main.go 
        GOOS=linux GOARCH=amd64 go build -o grpc-go-client_linux_amd64 ./bin/grpc-go-client/main.go
    - if: matrix.os == 'ubuntu-latest'
      name: Release (Linux)
      uses: nokotech/actions/release@release
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        owner: TakenokoTech
        repo: grpc-go
        dir: ./
        file: grpc-go_linux_amd64
        content-type: application/octet-stream
    
